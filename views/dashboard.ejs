<%- include('layouts/header.ejs') %>

<h2 class="mb-4">Hi, <%= user.name %></h2>

<div class="row">
  <div class="col-md-3">
    <ul class="list-group">
      <% if (users.length > 0) { %>
        <% users.forEach(function(u) { %>
          <li class="list-group-item list-group-item-dark cursor-pointer user-list" data-id="<%= u._id %>">
            <img src="<%= 'http://127.0.0.1:3000/' + u.image %>" alt="" width="40" height="40">
            <%= u.name %>
            <sup class="<%= u.is_online == 1 ? 'online-status' : 'offline-status' %>" id="<%= u._id %>-status">
              <%= u.is_online == 1 ? 'Online' : 'Offline' %>
            </sup>
          </li>
        <% }) %>
      <% } %>
    </ul>
  </div>

  <div class="col-md-9">
    <h3 class="start-head">Click to start the chat</h3>
    <div class="chat-section" style="display:none;">
      <div id="chat-container">
        <!-- <div class = "current-user-chat">
          <h5>Hii</h5>
        </div>
        <div class = "distance-user-chat">
          <h5>Hii</h5>
        </div> -->
      </div>
      <form id="chat-form">
        <input type="text" name="message" placeholder="Enter Message" id="message" class="border" required>
        <input type="submit" value="Send" class="btn btn-primary">
      </form>
    </div>
  </div>
</div>

<script>
  var sender_id = '<%= user._id %>';
  var receiver_id;

  var socket = io('/user-namespace', {
    auth: {
      token: sender_id
    }
  });

  $(document).ready(function () {
    $('.user-list').click(function () {
      receiver_id = $(this).data('id');
      $('.start-head').hide();
      $('.chat-section').show();

      socket.emit('existsChat',{sender_id :sender_id, receiver_id:receiver_id});
    });

    // brodcast user online
    socket.on('getOnlineUser', function (data) {
      $('#' + data.user_id + '-status')
        .text('Online')
        .removeClass('offline-status')
        .addClass('online-status');
    });

    // broadcast user offline
    socket.on('getOfflineUser', function (data) {
      $('#' + data.user_id + '-status')
        .text('Offline')
        .removeClass('online-status')
        .addClass('offline-status');
    });
    
    // broadcast chat
    socket.on('newChat', function(data){
        socket.broadcast.emit('loadNewChat', data);
    })

    // Chat form submission
    $('#chat-form').submit(function (event) {
      event.preventDefault();

      var message = $('#message').val();

      $.ajax({
        url: '/save-chat',
        type: 'POST',
        data: {
          sender_id: sender_id,
          receiver_id: receiver_id,
          message: message
        },
        success: function (response) {
          if (response.success) {
            $('#message').val('');
            let chat = response.data.message;
            let html  = `
             <div class = "current-user-chat">
             <h5> ` +chat+` </h5>
             <diV>
             `;
            $('#chat-container').append(html);
            socket.emit('newChat',response.data);

            scrollChat();

          } else {
            alert(response.msg);
          }
        }
      });
    });
  });

   
  //load new chat
  socket.on('loadNewChat', function(data){
    if(sender_id == data.receiver_id && receiver_id == data.sender_id){

      let html  = `
      <div class = "disatance-user-chat">
        <h5> ` +data.message+` </h5>
        <diV>
      `;
      $('#chat-container').append(html);      
    }
    scrollChat();
  });

  // load old chats
   socket.on('loadChats', function(data){
    $('#chat-container').html(''); //clear old chats

    var chats = data.chats;

    let html = '';
    for(let x = 0; x < chats.length ; x++){
          let addClass = '';
          if(chats[x]['sender_id'] == sender_id){
                addClass = 'current-user-chat';
          }
          else{
            addclass = 'distance-user-chat';
          }

          html +=`
          <div class="${addClass}">
            <h5>`+chats[x]['message']+`</h5>
          </div>
          `;
        }

          $('#chat-container').append(html);
          scrollChat();
    
   });

   //scroll bar 
 function scrollChat(){
  let chatContainer = $('#chat-container')[0]; // raw DOM element
  chatContainer.scrollTop = chatContainer.scrollHeight;
}

</script>

<%- include('layouts/footer.ejs') %>
